---
platform: linux

caches:
  - path: $HOME/.gradle/
  - path: $HOME/.m2/repository
  - path: $HOME/.android/sdk/cmdline-tools/bin

params:
  TERM: dumb
  PROJECT_ARN: arn:aws:devicefarm:us-west-2:944572984736:project:a202796d-364d-4917-96b7-52196f6ae4d8
  DEVICE_POOL_ARN: arn:aws:devicefarm:us-west-2:944572984736:devicepool:a202796d-364d-4917-96b7-52196f6ae4d8/59f56329-351a-4f26-8fb9-3f68aa0f0326
  ACCESS_KEY_ID: AKIA5X3HP5WQAUHCTYWX
  SECRET_ACCESS_KEY: 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
  REGION: us-west-2

inputs:
  - name: pr
outputs:
  - name: reports
  - name: generatedAPK
image_resource:
  type: docker-image
  source:
    repository: darkgeat/android-studio-gitlab-ci
    tag: '3.3.0'
run:
  path: sh
  user: root
  args:
    - -c
    - |
      export build_root=$(pwd)
      aws configure set region "$REGION"
      aws configure set aws_access_key_id "$ACCESS_KEY_ID"
      aws configure set aws_secret_access_key "$SECRET_ACCESS_KEY"

      mkdir ${build_root}/android-aws/
      echo '' >> ${build_root}/android-aws/app-debug-upload.txt
      echo '' >> ${build_root}/android-aws/app-test-upload.txt
      echo '' >> ${build_root}/android-aws/ui-test-results.txt

      cd pr/
      ./gradlew assembleDebug --stacktrace -PdisablePreDex
      cp app/build/outputs/apk/debug/app-debug.apk ${build_root}/generatedAPK/app-debug.apk

      VERSION_CODE=$(grep -E "^( *)versionCode" app/build.gradle | awk '{print $2}')

      aws devicefarm create-upload --project-arn "$PROJECT_ARN" --name app_to_test.apk --type ANDROID_APP --output json > ${build_root}/android-aws/app-debug-upload.txt
      cat ${build_root}/android-aws/app-debug-upload.txt

      aws devicefarm create-upload --project-arn "$PROJECT_ARN" --name app_test_instrumentation.apk --type INSTRUMENTATION_TEST_PACKAGE --output json > ${build_root}/android-aws/app-test-upload.txt
      cat ${build_root}/android-aws/app-test-upload.txt

      ANDROID_APP_URL=$(jq -r '.url' ${build_root}/android-aws/app-debug-upload.txt)
      ANDROID_APP_ARN=$(jq -r '.arn' ${build_root}/android-aws/app-debug-upload.txt)
      ANDROID_TEST_URL=$(jq -r '.url' ${build_root}/android-aws/app-test-upload.txt)
      ANDROID_TEST_ARN=$(jq -r '.arn' ${build_root}/android-aws/app-test-upload.txt)

      curl -T ${build_root}/generatedAPK/app-debug.apk $ANDROID_APP_URL
      curl -T ci/ui-test/app-debug-androidTest.apk $ANDROID_TEST_URL

      sleep 10

      aws devicefarm schedule-run --project-arn $PROJECT_ARN --app-arn "$ANDROID_APP_ARN" --device-pool-arn "$DEVICE_POOL_ARN" --name "test run build version: $VERSION_CODE" --test type=INSTRUMENTATION,testPackageArn=$ANDROID_TEST_ARN --configuration billingMethod=UNMETERED --output json > ${build_root}/android-aws/ui-test-results.txt
      cat ${build_root}/android-aws/ui-test-results.txt